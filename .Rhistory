classification.experiment.neutral.dataset.grouped <- read.csv("~/local-research/diss/experiments/experiment-classification/data/classification-experiment-neutral-dataset-grouped.csv")
View(classification.experiment.neutral.dataset.grouped)
setwd("~/local-research/diss/experiments/experiment-classification/experiment-classification")
setwd("~/local-research/diss/experiments/experiment-classification")
class.grouped <- read.csv("data/classification-experiment-neutral-dataset-grouped.csv")
View(class.grouped)
class.full <- read.csv("data/classification-experiment-neutral-dataset-fullrows.csv")
View(class.grouped)
View(class.grouped)
class.full <- read.csv("data/classification-experiment-neutral-dataset-fullrows.csv", row.names=NULL)
head(class.full)
View(class.full)
View(class.full)
class.grouped <- read.csv("data/classification-experiment-neutral-dataset-grouped.csv", row.names=NULL)
View(class.grouped)
View(class.grouped)
View(class.full)
View(class.full)
class.grouped <- read.csv("data/classification-experiment-neutral-dataset-grouped.csv", row.names=NULL)
View(class.grouped)
View(class.grouped)
class.full <- read.csv("data/classification-experiment-neutral-dataset-fullrows.csv", row.names=NULL)
View(class.full)
View(class.full)
View(class.full)
# Data loading
# Experiment:  Classification
# Mark E. Madsen
# (c) 2013 - see file LICENSE for license terms
if(!exists("class.grouped")) {
class.grouped <- read.csv("data/classification-experiment-neutral-dataset-grouped.csv",
row.names=NULL,
header=TRUE,
colClasses=c(
"factor","character","factor","integer","integer",
"numeric","factor","factor","integer",
"numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric"
))
}
if(!exists("class.full")) {
class.full <- read.csv("data/classification-experiment-neutral-dataset-fullrows.csv",
row.names=NULL,
header=TRUE,
colClasses = c(
"factor","factor","factor","factor",
"integer","factor","integer","integer","numeric",
"character","numeric","numeric","numeric",
"numeric","numeric",
"numeric","numeric","numeric",
"numeric"
))
}
# Data loading
# Experiment:  Classification
# Mark E. Madsen
# (c) 2013 - see file LICENSE for license terms
if(!exists("class.grouped")) {
class.grouped <- read.csv("data/classification-experiment-neutral-dataset-grouped.csv",
row.names=NULL,
header=TRUE,
colClasses=c(
"factor","character","factor","integer","integer",
"numeric","factor","factor","integer",
"numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric"
))
}
if(!exists("class.full")) {
class.full <- read.csv("data/classification-experiment-neutral-dataset-fullrows.csv",
row.names=NULL,
header=TRUE,
colClasses = c(
"factor","factor","factor","factor",
"integer","factor","integer","integer","numeric",
"character","numeric","numeric","numeric",
"numeric","numeric",
"numeric","numeric","numeric",
"numeric"
))
}
# Data loading
# Experiment:  Classification
# Mark E. Madsen
# (c) 2013 - see file LICENSE for license terms
if(!exists("class.grouped")) {
class.grouped <- read.csv("data/classification-experiment-neutral-dataset-grouped.csv",
row.names=NULL,
header=TRUE,
colClasses=c(
"factor","character","factor","integer","integer",
"numeric","factor","factor","integer",
"numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric"
))
}
if(!exists("class.full")) {
class.full <- read.csv("data/classification-experiment-neutral-dataset-fullrows.csv",
row.names=NULL,
header=TRUE,
colClasses = c(
"factor","factor","factor","factor",
"integer","factor","integer","integer","numeric",
"character","numeric","numeric","numeric",
"numeric","numeric",
"numeric","numeric","numeric",
"numeric"
))
}
View(class.full)
View(class.full)
View(class.full)
View(class.grouped)
View(class.grouped)
save(class.grouped, file="data/classification-grouped.rda")
save(class.full, file="data/classification-full.rda")
# Data loading
# Experiment:  Classification
# Mark E. Madsen
# (c) 2013 - see file LICENSE for license terms
if(!exists("class.grouped")) {
if(file.exists("data/classification-grouped.rda")) {
load("data/classification-grouped.rda")
} else {
class.grouped <- read.csv("data/classification-experiment-neutral-dataset-grouped.csv",
row.names=NULL,
header=TRUE,
colClasses=c(
"factor","character","factor","integer","integer",
"numeric","factor","factor","integer",
"numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric"
))
}
}
if(!exists("class.full")) {
if(file.exists("data/classification-full.rda")) {
load("data/classification-full.rda")
} else {
class.full <- read.csv("data/classification-experiment-neutral-dataset-fullrows.csv",
row.names=NULL,
header=TRUE,
colClasses = c(
"factor","factor","factor","factor",
"integer","factor","integer","integer","numeric",
"character","numeric","numeric","numeric",
"numeric","numeric",
"numeric","numeric","numeric",
"numeric"
))
}
}
devtools::install_github("assertthat")
devtools::install_github("dplyr")
devtools::install_github("dplyr")
devtools::install_github("dplyr")
View(class.grouped)
# Data loading
# Experiment:  Classification
# Mark E. Madsen
# (c) 2013 - see file LICENSE for license terms
if(!exists("class.grouped")) {
if(file.exists("data/classification-grouped.rda")) {
load("data/classification-grouped.rda")
} else {
class.grouped <- read.csv("data/classification-experiment-neutral-dataset-grouped.csv",
row.names=NULL,
header=TRUE,
colClasses=c(
"factor","character","factor","integer","integer",
"numeric","factor","factor","integer",
"numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric"
))
}
}
if(!exists("class.full")) {
if(file.exists("data/classification-full.rda")) {
load("data/classification-full.rda")
} else {
class.full <- read.csv("data/classification-experiment-neutral-dataset-fullrows.csv",
row.names=NULL,
header=TRUE,
colClasses = c(
"factor","factor","factor","factor",
"integer","factor","integer","integer","numeric",
"character","numeric","numeric","numeric",
"numeric","numeric",
"numeric","numeric","numeric",
"numeric"
))
}
}
if(!exists("class.grouped")) {
if(file.exists("data/classification-grouped.rda")) {
load("data/classification-grouped.rda")
} else {
class.grouped <- read.csv("data/classification-experiment-neutral-dataset-grouped.csv",
row.names=NULL,
header=TRUE,
colClasses=c(
"factor","character","factor","integer","integer",
"numeric","factor","factor","integer",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric"
))
}
}
View(class.grouped)
View(class.grouped)
save(class.grouped, file="data/classification-grouped.rda")
View(class.grouped)
View(class.grouped)
# Data loading
# Experiment:  Classification
# Mark E. Madsen
# (c) 2013 - see file LICENSE for license terms
if(!exists("class.grouped")) {
if(file.exists("data/classification-grouped.rda")) {
load("data/classification-grouped.rda")
} else {
class.grouped <- read.csv("data/classification-experiment-neutral-dataset-grouped.csv",
row.names=NULL,
header=TRUE,
colClasses=c(
"factor","character","factor","integer","integer",
"numeric","factor","factor","integer",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric"
))
}
}
if(!exists("class.full")) {
if(file.exists("data/classification-full.rda")) {
load("data/classification-full.rda")
} else {
class.full <- read.csv("data/classification-experiment-neutral-dataset-fullrows.csv",
row.names=NULL,
header=TRUE,
colClasses = c(
"factor","factor","factor","factor",
"integer","factor","integer","integer","numeric",
"character","numeric","numeric","numeric",
"numeric","numeric",
"numeric","numeric","numeric",
"numeric"
))
}
}
View(class.grouped)
View(class.grouped)
class.grouped$theta <- class.grouped$population_size * class.grouped$mutation_rate * 2.0
class.grouped$theta_factor <- factor(class.grouped$theta)
View(class.grouped)
View(class.grouped)
colnames
colnames(class.grouped)
library(ggplot2)
qplot(theta, mean_class_richness, data=class.grouped, facets = classification_type ~ classification_coarseness, geom=c("point", "smooth"))
qplot(theta, log(mean_class_richness), data=class.grouped, facets = classification_type ~ classification_coarseness, geom=c("point", "smooth"))
library(ggplot2)
qplot(theta, mean_class_richness, data=class.grouped, facets = classification_type ~ classification_coarseness, geom=c("point", "smooth"))
qplot(theta, mean_class_richness, data=class.grouped, facets = mutation_rate ~ classification_coarseness, geom=c("point", "smooth"))
qplot(theta, mean_class_richness, data=class.grouped, facets = mutation_rate ~ classification_coarseness, geom=c("point"))
qplot(mutation_rate, mean_class_richness, data=class.grouped, facets = theta_factor ~ classification_coarseness, geom=c("point"))
grouped.theta.025 <- subset(class.grouped, theta_factor = 0.25)
View(grouped.theta.025)
View(grouped.theta.025)
View(grouped.theta.025)
rm(grouped.theta.025)
grouped.theta.025 <- subset(class.grouped, class.grouped$theta_factor = 0.2)
grouped.theta.025 <- subset(class.grouped, class.grouped$theta_factor = "0.2")
grouped.theta.025 <- subset(class.grouped, class.grouped$theta_factor == "0.2")
View(grouped.theta.025)
View(grouped.theta.025)
grouped.theta.025 <- subset(class.grouped, class.grouped$theta_factor == "0.2")
grouped.theta.1 <- subset(class.grouped, class.grouped$theta_factor == "1")
grouped.theta.10 <- subset(class.grouped, class.grouped$theta_factor == "10")
View(grouped.theta.10)
View(grouped.theta.10)
View(class.grouped)
View(class.grouped)
# Data loading
# Experiment:  Classification
# Mark E. Madsen
# (c) 2013 - see file LICENSE for license terms
if(!exists("class.grouped")) {
if(file.exists("data/classification-grouped.rda")) {
load("data/classification-grouped.rda")
} else {
class.grouped <- read.csv("data/classification-experiment-neutral-dataset-grouped.csv",
row.names=NULL,
header=TRUE,
colClasses=c(
"factor","character","factor","integer","integer",
"numeric","factor","factor","integer",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric"
))
}
}
if(!exists("class.full")) {
if(file.exists("data/classification-full.rda")) {
load("data/classification-full.rda")
} else {
class.full <- read.csv("data/classification-experiment-neutral-dataset-fullrows.csv",
row.names=NULL,
header=TRUE,
colClasses = c(
"factor","factor","factor","factor",
"integer","factor","integer","integer","numeric",
"character","numeric","numeric","numeric",
"numeric","numeric",
"numeric","numeric","numeric",
"numeric"
))
}
}
# Derived variables
# Experiment:  Classification
# Mark E. Madsen
# (c) 2013 - see file LICENSE for license terms
# calculate theta as a number, and as a factor
# assume haploid so 2Nmu, not 4Nmu
class.grouped$theta <- class.grouped$population_size * class.grouped$mutation_rate * 2.0
class.grouped$theta_factor <- factor(class.grouped$theta)
# Total number of classes is the coarseness for each dimension multiplied
class.grouped$total_num_classes <- class.grouped$classification_coarseness ^ class.grouped$dimensionality
View(class.grouped)
View(class.grouped)
class.grouped$total_num_classes <- as.numeric(class.grouped$classification_coarseness) ^ as.numeric(class.grouped$dimensionality)
View(class.grouped)
View(class.grouped)
grouped.theta_subset <- subset(class.grouped, class.grouped$theta_factor == c("0.2", "1", "10"))
View(grouped.theta_subset)
View(grouped.theta_subset)
qplot(total_num_classes, mean_class_richness, data=grouped.theta_subset, facets = theta_factor ~ ., geom=c("point"))
save.image("~/local-research/diss/experiments/experiment-classification/classification.RData")
class.grouped$total_classes_factor <- factor(class.grouped$total_num_classes)
grouped.theta_subset <- subset(class.grouped, class.grouped$theta_factor == c("0.2", "1", "10"))
qplot(mean_trait_richness, mean_class_richness, data=grouped.theta_subset, facets = theta_factor ~ total_classes_factor, geom=c("point"))
View(class.grouped)
